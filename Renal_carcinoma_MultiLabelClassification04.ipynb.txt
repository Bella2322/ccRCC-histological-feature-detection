{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Renal_carcinoma_MultiLabelClassification04.ipynb",
      "provenance": [],
      "collapsed_sections": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard",
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "Y2f8QE2un9E-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iKZtwUFjduwt",
        "outputId": "dc9557cc-deeb-4422-aead-c23b7e031ced"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mounted at /content/drive\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "## **Classification**"
      ],
      "metadata": {
        "id": "tVNbE2hJOzsK"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "lYEbxbDnGRVU"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "# LoaD multiple CSV"
      ],
      "metadata": {
        "id": "NomqKBpBM04z"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "import numpy as np"
      ],
      "metadata": {
        "id": "gtj-5JualJOC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "all_files = [\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K520/K520 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K379/K379 nuclear annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K376/K376 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K256/K256 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K250/K250 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K180/K180 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K139/K139 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K124/K124 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K118/K118 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K110/K110 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K107/K107 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K105/K105 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K097/K097 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K096/K096 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K070/K070 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K066/K066 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K059/K059 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K065/K065 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K021/K021 H&E annotations.tsv\",\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/K027/K027 H&E annotations.tsv\"]\n",
        "\n",
        "df = pd.concat((pd.read_csv(f,sep='\\t') for f in all_files), ignore_index=True)"
      ],
      "metadata": {
        "id": "MgjXrs0sM5SM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "id": "4YzB0vS4pam-"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "unique_classes=np.unique(df['Name'])\n",
        "unique_classes=list(unique_classes)\n",
        "unique_classes.insert(0,'Image')\n",
        "unique_classes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "dp18L8sGNSFM",
        "outputId": "7d811030-e317-4a9a-c4c8-e8fb4a0e167c"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Image',\n",
              " 'Alveolar',\n",
              " 'Blood vessels',\n",
              " 'Chromophobe-like',\n",
              " 'Clear cells',\n",
              " 'Compact small nests',\n",
              " 'Cystic',\n",
              " 'Eosinophlic',\n",
              " 'Fibrosis',\n",
              " 'Friable',\n",
              " 'HLRCC like',\n",
              " 'ISUP 1',\n",
              " 'ISUP 2',\n",
              " 'ISUP 3',\n",
              " 'ISUP 4',\n",
              " 'Immune infiltration',\n",
              " 'Infiltrative',\n",
              " 'Insular',\n",
              " 'Large nests',\n",
              " 'Lymphovascular Invasion',\n",
              " 'Necrosis',\n",
              " 'Non-Tumour cell',\n",
              " 'Non-tumour tissue',\n",
              " 'Normal kidney',\n",
              " 'Normal tissue',\n",
              " 'Papillary',\n",
              " 'PathAnnotationObject',\n",
              " 'Regressive',\n",
              " 'Rhabdoid',\n",
              " 'Sarcomatoid',\n",
              " 'Solid sheets',\n",
              " 'Syncytial giant cell',\n",
              " 'TILS high',\n",
              " 'TILS low',\n",
              " 'TILS moderate',\n",
              " 'Tertiary Lymphoid Structure',\n",
              " 'Tissue_area',\n",
              " 'Translocation-like',\n",
              " 'Tubular',\n",
              " 'Tumour cell',\n",
              " 'Unassigned_architecture',\n",
              " 'artefact',\n",
              " 'compact small nests',\n",
              " 'grade_unassigned',\n",
              " 'granular cytoplasm',\n",
              " 'haemorrhage',\n",
              " 'no_tissue',\n",
              " 'normal_immune',\n",
              " 'peri-tumoural_immune',\n",
              " 'sclerotic nested pattern',\n",
              " 'spindled',\n",
              " 'tertiary lymphoid structure',\n",
              " 'tissue_area',\n",
              " 'tumour_immune']"
            ]
          },
          "metadata": {},
          "execution_count": 4
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset=df['Image']\n",
        "dataset.columns=unique_classes\n",
        "dataset=pd.DataFrame(dataset,columns=unique_classes)\n",
        "\n",
        "dataset = dataset.drop_duplicates(subset=['Image'])\n",
        "dataset=dataset.fillna(0)\n",
        "dataset"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "id": "Q-3FHskfNlQO",
        "outputId": "9432afbf-ffc3-4b7d-95e4-1c32dc23e296"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            Image  Alveolar  Blood vessels  Chromophobe-like  Clear cells  \\\n",
              "0      K520_PR001         0              0                 0            0   \n",
              "16     K520_PR002         0              0                 0            0   \n",
              "30     K520_PR003         0              0                 0            0   \n",
              "37     K520_PR004         0              0                 0            0   \n",
              "46     K520_PR005         0              0                 0            0   \n",
              "...           ...       ...            ...               ...          ...   \n",
              "16899  K027_PR001         0              0                 0            0   \n",
              "16907  K027_PR002         0              0                 0            0   \n",
              "16916  K027_PR003         0              0                 0            0   \n",
              "16923  K027_PR004         0              0                 0            0   \n",
              "16932  K027_PR005         0              0                 0            0   \n",
              "\n",
              "       Compact small nests  Cystic  Eosinophlic  Fibrosis  Friable  ...  \\\n",
              "0                        0       0            0         0        0  ...   \n",
              "16                       0       0            0         0        0  ...   \n",
              "30                       0       0            0         0        0  ...   \n",
              "37                       0       0            0         0        0  ...   \n",
              "46                       0       0            0         0        0  ...   \n",
              "...                    ...     ...          ...       ...      ...  ...   \n",
              "16899                    0       0            0         0        0  ...   \n",
              "16907                    0       0            0         0        0  ...   \n",
              "16916                    0       0            0         0        0  ...   \n",
              "16923                    0       0            0         0        0  ...   \n",
              "16932                    0       0            0         0        0  ...   \n",
              "\n",
              "       granular cytoplasm  haemorrhage  no_tissue  normal_immune  \\\n",
              "0                       0            0          0              0   \n",
              "16                      0            0          0              0   \n",
              "30                      0            0          0              0   \n",
              "37                      0            0          0              0   \n",
              "46                      0            0          0              0   \n",
              "...                   ...          ...        ...            ...   \n",
              "16899                   0            0          0              0   \n",
              "16907                   0            0          0              0   \n",
              "16916                   0            0          0              0   \n",
              "16923                   0            0          0              0   \n",
              "16932                   0            0          0              0   \n",
              "\n",
              "       peri-tumoural_immune  sclerotic nested pattern  spindled  \\\n",
              "0                         0                         0         0   \n",
              "16                        0                         0         0   \n",
              "30                        0                         0         0   \n",
              "37                        0                         0         0   \n",
              "46                        0                         0         0   \n",
              "...                     ...                       ...       ...   \n",
              "16899                     0                         0         0   \n",
              "16907                     0                         0         0   \n",
              "16916                     0                         0         0   \n",
              "16923                     0                         0         0   \n",
              "16932                     0                         0         0   \n",
              "\n",
              "       tertiary lymphoid structure  tissue_area  tumour_immune  \n",
              "0                                0            0              0  \n",
              "16                               0            0              0  \n",
              "30                               0            0              0  \n",
              "37                               0            0              0  \n",
              "46                               0            0              0  \n",
              "...                            ...          ...            ...  \n",
              "16899                            0            0              0  \n",
              "16907                            0            0              0  \n",
              "16916                            0            0              0  \n",
              "16923                            0            0              0  \n",
              "16932                            0            0              0  \n",
              "\n",
              "[334 rows x 54 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bebf46d8-b07a-4ab0-acca-99a86c3cd7b0\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Image</th>\n",
              "      <th>Alveolar</th>\n",
              "      <th>Blood vessels</th>\n",
              "      <th>Chromophobe-like</th>\n",
              "      <th>Clear cells</th>\n",
              "      <th>Compact small nests</th>\n",
              "      <th>Cystic</th>\n",
              "      <th>Eosinophlic</th>\n",
              "      <th>Fibrosis</th>\n",
              "      <th>Friable</th>\n",
              "      <th>...</th>\n",
              "      <th>granular cytoplasm</th>\n",
              "      <th>haemorrhage</th>\n",
              "      <th>no_tissue</th>\n",
              "      <th>normal_immune</th>\n",
              "      <th>peri-tumoural_immune</th>\n",
              "      <th>sclerotic nested pattern</th>\n",
              "      <th>spindled</th>\n",
              "      <th>tertiary lymphoid structure</th>\n",
              "      <th>tissue_area</th>\n",
              "      <th>tumour_immune</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>K520_PR001</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>K520_PR002</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>K520_PR003</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>K520_PR004</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>K520_PR005</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16899</th>\n",
              "      <td>K027_PR001</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16907</th>\n",
              "      <td>K027_PR002</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16916</th>\n",
              "      <td>K027_PR003</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16923</th>\n",
              "      <td>K027_PR004</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16932</th>\n",
              "      <td>K027_PR005</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>334 rows × 54 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bebf46d8-b07a-4ab0-acca-99a86c3cd7b0')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-bebf46d8-b07a-4ab0-acca-99a86c3cd7b0 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-bebf46d8-b07a-4ab0-acca-99a86c3cd7b0');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "for i in range(len(df)):\n",
        "  image=df['Image'][i]\n",
        "  name=df['Name'][i]\n",
        "  #dataset[df['Image']][name]=1\n",
        "  dataset[name].loc[dataset['Image']==image]=1\n",
        "  #print( dataset[dataset['Image']==image][name])\n",
        "#dataset=dataset.reset_index()"
      ],
      "metadata": {
        "id": "FLOqzbd8Nqod",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "e87475fb-55ec-4533-9dfb-5637ec422262"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/pandas/core/indexing.py:1732: SettingWithCopyWarning: \n",
            "A value is trying to be set on a copy of a slice from a DataFrame\n",
            "\n",
            "See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n",
            "  self._setitem_single_block(indexer, value, name)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "dataset=dataset.reset_index()\n",
        "dataset"
      ],
      "metadata": {
        "id": "HfEkvTmNOHNC",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 502
        },
        "outputId": "182b18a5-2e5a-4319-abf9-427b067b502b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     index       Image  Alveolar  Blood vessels  Chromophobe-like  \\\n",
              "0        0  K520_PR001         0              0                 0   \n",
              "1       16  K520_PR002         0              0                 0   \n",
              "2       30  K520_PR003         0              0                 0   \n",
              "3       37  K520_PR004         0              0                 0   \n",
              "4       46  K520_PR005         0              0                 0   \n",
              "..     ...         ...       ...            ...               ...   \n",
              "329  16899  K027_PR001         1              0                 0   \n",
              "330  16907  K027_PR002         1              0                 0   \n",
              "331  16916  K027_PR003         1              0                 0   \n",
              "332  16923  K027_PR004         1              0                 0   \n",
              "333  16932  K027_PR005         1              0                 0   \n",
              "\n",
              "     Clear cells  Compact small nests  Cystic  Eosinophlic  Fibrosis  ...  \\\n",
              "0              1                    1       0            0         1  ...   \n",
              "1              1                    0       0            0         0  ...   \n",
              "2              0                    0       0            0         0  ...   \n",
              "3              1                    0       0            0         0  ...   \n",
              "4              1                    0       0            0         1  ...   \n",
              "..           ...                  ...     ...          ...       ...  ...   \n",
              "329            1                    0       1            0         1  ...   \n",
              "330            1                    0       0            0         1  ...   \n",
              "331            1                    0       1            0         0  ...   \n",
              "332            1                    1       0            0         1  ...   \n",
              "333            1                    0       1            0         1  ...   \n",
              "\n",
              "     granular cytoplasm  haemorrhage  no_tissue  normal_immune  \\\n",
              "0                     0            0          0              0   \n",
              "1                     0            0          0              0   \n",
              "2                     1            0          0              0   \n",
              "3                     0            0          0              0   \n",
              "4                     0            0          0              0   \n",
              "..                  ...          ...        ...            ...   \n",
              "329                   0            0          0              0   \n",
              "330                   0            0          0              0   \n",
              "331                   0            0          0              0   \n",
              "332                   0            0          0              0   \n",
              "333                   0            0          0              0   \n",
              "\n",
              "     peri-tumoural_immune  sclerotic nested pattern  spindled  \\\n",
              "0                       1                         1         0   \n",
              "1                       0                         0         0   \n",
              "2                       0                         0         0   \n",
              "3                       1                         1         0   \n",
              "4                       1                         1         0   \n",
              "..                    ...                       ...       ...   \n",
              "329                     0                         0         0   \n",
              "330                     0                         0         0   \n",
              "331                     0                         0         0   \n",
              "332                     0                         0         0   \n",
              "333                     0                         0         0   \n",
              "\n",
              "     tertiary lymphoid structure  tissue_area  tumour_immune  \n",
              "0                              0            0              1  \n",
              "1                              0            0              1  \n",
              "2                              0            0              1  \n",
              "3                              0            1              1  \n",
              "4                              0            0              1  \n",
              "..                           ...          ...            ...  \n",
              "329                            0            0              1  \n",
              "330                            0            0              1  \n",
              "331                            0            0              1  \n",
              "332                            0            0              1  \n",
              "333                            0            0              1  \n",
              "\n",
              "[334 rows x 55 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-de9963f1-f580-43f7-a8ea-9d6e74498cf7\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>Image</th>\n",
              "      <th>Alveolar</th>\n",
              "      <th>Blood vessels</th>\n",
              "      <th>Chromophobe-like</th>\n",
              "      <th>Clear cells</th>\n",
              "      <th>Compact small nests</th>\n",
              "      <th>Cystic</th>\n",
              "      <th>Eosinophlic</th>\n",
              "      <th>Fibrosis</th>\n",
              "      <th>...</th>\n",
              "      <th>granular cytoplasm</th>\n",
              "      <th>haemorrhage</th>\n",
              "      <th>no_tissue</th>\n",
              "      <th>normal_immune</th>\n",
              "      <th>peri-tumoural_immune</th>\n",
              "      <th>sclerotic nested pattern</th>\n",
              "      <th>spindled</th>\n",
              "      <th>tertiary lymphoid structure</th>\n",
              "      <th>tissue_area</th>\n",
              "      <th>tumour_immune</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>K520_PR001</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>16</td>\n",
              "      <td>K520_PR002</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>30</td>\n",
              "      <td>K520_PR003</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>37</td>\n",
              "      <td>K520_PR004</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>46</td>\n",
              "      <td>K520_PR005</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>329</th>\n",
              "      <td>16899</td>\n",
              "      <td>K027_PR001</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>330</th>\n",
              "      <td>16907</td>\n",
              "      <td>K027_PR002</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>331</th>\n",
              "      <td>16916</td>\n",
              "      <td>K027_PR003</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>332</th>\n",
              "      <td>16923</td>\n",
              "      <td>K027_PR004</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>333</th>\n",
              "      <td>16932</td>\n",
              "      <td>K027_PR005</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>334 rows × 55 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de9963f1-f580-43f7-a8ea-9d6e74498cf7')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-de9963f1-f580-43f7-a8ea-9d6e74498cf7 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-de9963f1-f580-43f7-a8ea-9d6e74498cf7');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 7
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from keras.applications.resnet import ResNet50,ResNet152\n",
        "from keras.applications.vgg19 import VGG19\n",
        "\n",
        "import os\n",
        "import itertools\n",
        "import sys\n",
        "import xml.etree.ElementTree as ET\n",
        "from collections import Counter\n",
        "from pathlib import Path\n",
        "\n",
        "import matplotlib.pyplot as plt\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "import seaborn as sns\n",
        "\n",
        "from keras import backend as K\n",
        "from keras.callbacks import Callback\n",
        "from keras.layers import Dense\n",
        "from keras.models import Model\n",
        "from PIL import Image\n",
        "from sklearn.metrics import (f1_score,\n",
        "                             precision_score,\n",
        "                             recall_score)"
      ],
      "metadata": {
        "id": "OJhY-_JvVSlh"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "def make_model():\n",
        "    base_model = VGG19(\n",
        "        include_top=False,\n",
        "        weights='imagenet',\n",
        "        input_shape=None,\n",
        "        pooling='avg'\n",
        "    )\n",
        "    \n",
        "    for layer in base_model.layers[10:]:\n",
        "        layer.trainable = False\n",
        "\n",
        "    predictions = Dense(len(unique_classes)-1, activation='sigmoid')(base_model.output)\n",
        "    model = Model(inputs=base_model.input, outputs=predictions)\n",
        "    model.compile(\n",
        "        loss='binary_crossentropy',\n",
        "        optimizer='adam',\n",
        "        metrics=[ 'accuracy']\n",
        "    )\n",
        "    return model\n",
        "\n",
        "model = make_model()\n",
        "model.summary()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "9b6TNuPrP1-m",
        "outputId": "364d2292-4f1a-4fb7-9f5e-61b4bba2702b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Downloading data from https://storage.googleapis.com/tensorflow/keras-applications/vgg19/vgg19_weights_tf_dim_ordering_tf_kernels_notop.h5\n",
            "80142336/80134624 [==============================] - 0s 0us/step\n",
            "80150528/80134624 [==============================] - 0s 0us/step\n",
            "Model: \"model\"\n",
            "_________________________________________________________________\n",
            " Layer (type)                Output Shape              Param #   \n",
            "=================================================================\n",
            " input_1 (InputLayer)        [(None, None, None, 3)]   0         \n",
            "                                                                 \n",
            " block1_conv1 (Conv2D)       (None, None, None, 64)    1792      \n",
            "                                                                 \n",
            " block1_conv2 (Conv2D)       (None, None, None, 64)    36928     \n",
            "                                                                 \n",
            " block1_pool (MaxPooling2D)  (None, None, None, 64)    0         \n",
            "                                                                 \n",
            " block2_conv1 (Conv2D)       (None, None, None, 128)   73856     \n",
            "                                                                 \n",
            " block2_conv2 (Conv2D)       (None, None, None, 128)   147584    \n",
            "                                                                 \n",
            " block2_pool (MaxPooling2D)  (None, None, None, 128)   0         \n",
            "                                                                 \n",
            " block3_conv1 (Conv2D)       (None, None, None, 256)   295168    \n",
            "                                                                 \n",
            " block3_conv2 (Conv2D)       (None, None, None, 256)   590080    \n",
            "                                                                 \n",
            " block3_conv3 (Conv2D)       (None, None, None, 256)   590080    \n",
            "                                                                 \n",
            " block3_conv4 (Conv2D)       (None, None, None, 256)   590080    \n",
            "                                                                 \n",
            " block3_pool (MaxPooling2D)  (None, None, None, 256)   0         \n",
            "                                                                 \n",
            " block4_conv1 (Conv2D)       (None, None, None, 512)   1180160   \n",
            "                                                                 \n",
            " block4_conv2 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block4_conv3 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block4_conv4 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block4_pool (MaxPooling2D)  (None, None, None, 512)   0         \n",
            "                                                                 \n",
            " block5_conv1 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block5_conv2 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block5_conv3 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block5_conv4 (Conv2D)       (None, None, None, 512)   2359808   \n",
            "                                                                 \n",
            " block5_pool (MaxPooling2D)  (None, None, None, 512)   0         \n",
            "                                                                 \n",
            " global_average_pooling2d (G  (None, 512)              0         \n",
            " lobalAveragePooling2D)                                          \n",
            "                                                                 \n",
            " dense (Dense)               (None, 53)                27189     \n",
            "                                                                 \n",
            "=================================================================\n",
            "Total params: 20,051,573\n",
            "Trainable params: 1,762,677\n",
            "Non-trainable params: 18,288,896\n",
            "_________________________________________________________________\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import imageio as iio\n",
        "from skimage.transform import resize\n"
      ],
      "metadata": {
        "id": "BNXV3jieiRma"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def load_data(dataset,base_dir):\n",
        "    X_train=[]\n",
        "    y_train=[]\n",
        "    for i in range(len(dataset)):\n",
        "\n",
        "      img_dir=base_dir+dataset['Image'][i]+'.jpg'\n",
        "      try:\n",
        "        img=iio.imread(img_dir)\n",
        "      except:\n",
        "        continue\n",
        "      img=resize(img, (224, 224), mode='constant')\n",
        "      print(img_dir)\n",
        "      X_train.append(img)\n",
        "      y_train.append(dataset.iloc[i,2:])\n",
        "    return np.array(X_train),np.array(y_train)\n",
        "x,y=load_data(dataset,\"/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "umUXjlllWVe3",
        "outputId": "1a2248c1-3543-46ad-b2a5-cf237d34b262"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR015.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR016.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR017.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_PR018.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K520_MR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR017.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR018.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR020.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR021.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR022.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR023.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K379_PR024.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K376_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR015.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K256_PR016.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_LR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_LR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_NR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K250_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR015.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR016.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR017.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR018.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR019.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR020.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR021.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR022.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR023.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR024.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR025.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR026.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR027.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR028.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_PR029.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_MR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_MR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K180_MR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR017.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR019.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR020.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR021.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR029.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR030.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR035.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K139_PR036.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_N.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR017.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR018.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR019.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR020.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR021.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR022.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR028.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR029.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR030.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR031.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR035.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR036.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR037.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR038.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR045.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR046.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR047.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR048.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR055.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR056.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR061.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR062.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR063.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR064.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR065.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K124_PR066.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K118_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K110_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_MR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_MR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_MR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K107_MR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K105_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K097_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K097_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K097_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_LR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K096_MR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K070_PR014.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K066_MR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR010.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR012.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_PR013.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K059_MR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_NR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR007.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR008.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K065_PR009.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR004.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR005.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR006.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K021_PR011.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K027_N.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K027_PR001.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K027_PR002.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K027_PR003.jpg\n",
            "/content/drive/MyDrive/Upwork_Projects/Renal_Carcinoma2/Multilabel_Dataset/K027_PR004.jpg\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "x = np.asarray(x).astype(np.float32)\n",
        "y = np.asarray(y).astype(np.float32)\n",
        "len(x)"
      ],
      "metadata": {
        "id": "7n0ylWP0n1qA",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "2125b727-14f3-4d67-b62b-b9bd11ad5c22"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "266"
            ]
          },
          "metadata": {},
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.imshow(x[19])"
      ],
      "metadata": {
        "id": "XKPGl3exrvKf"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model.fit(x,y,epochs=100)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "3G_a5p9lg54f",
        "outputId": "bfcfd6fc-d336-4da9-88ab-4139443a60d5"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Epoch 1/100\n",
            "9/9 [==============================] - 25s 765ms/step - loss: 0.5209 - accuracy: 0.0150\n",
            "Epoch 2/100\n",
            "9/9 [==============================] - 4s 405ms/step - loss: 0.2807 - accuracy: 0.0075\n",
            "Epoch 3/100\n",
            "9/9 [==============================] - 4s 406ms/step - loss: 0.2622 - accuracy: 0.0075\n",
            "Epoch 4/100\n",
            "9/9 [==============================] - 4s 409ms/step - loss: 0.2586 - accuracy: 0.0075\n",
            "Epoch 5/100\n",
            "9/9 [==============================] - 4s 412ms/step - loss: 0.2577 - accuracy: 0.0075\n",
            "Epoch 6/100\n",
            "9/9 [==============================] - 4s 414ms/step - loss: 0.2558 - accuracy: 0.0075\n",
            "Epoch 7/100\n",
            "9/9 [==============================] - 4s 416ms/step - loss: 0.2560 - accuracy: 0.0075\n",
            "Epoch 8/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.2552 - accuracy: 0.0075\n",
            "Epoch 9/100\n",
            "9/9 [==============================] - 4s 428ms/step - loss: 0.2566 - accuracy: 0.0075\n",
            "Epoch 10/100\n",
            "9/9 [==============================] - 4s 433ms/step - loss: 0.2541 - accuracy: 0.0075\n",
            "Epoch 11/100\n",
            "9/9 [==============================] - 4s 432ms/step - loss: 0.2547 - accuracy: 0.0075\n",
            "Epoch 12/100\n",
            "9/9 [==============================] - 4s 433ms/step - loss: 0.2544 - accuracy: 0.0075\n",
            "Epoch 13/100\n",
            "9/9 [==============================] - 4s 439ms/step - loss: 0.2542 - accuracy: 0.0075\n",
            "Epoch 14/100\n",
            "9/9 [==============================] - 4s 434ms/step - loss: 0.2540 - accuracy: 0.0075\n",
            "Epoch 15/100\n",
            "9/9 [==============================] - 4s 432ms/step - loss: 0.2514 - accuracy: 0.0075\n",
            "Epoch 16/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.2507 - accuracy: 0.0075\n",
            "Epoch 17/100\n",
            "9/9 [==============================] - 4s 424ms/step - loss: 0.2500 - accuracy: 0.0075\n",
            "Epoch 18/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.2498 - accuracy: 0.0075\n",
            "Epoch 19/100\n",
            "9/9 [==============================] - 4s 415ms/step - loss: 0.2543 - accuracy: 0.0075\n",
            "Epoch 20/100\n",
            "9/9 [==============================] - 4s 416ms/step - loss: 0.2504 - accuracy: 0.0075\n",
            "Epoch 21/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.2479 - accuracy: 0.0075\n",
            "Epoch 22/100\n",
            "9/9 [==============================] - 4s 415ms/step - loss: 0.2466 - accuracy: 0.0075\n",
            "Epoch 23/100\n",
            "9/9 [==============================] - 4s 416ms/step - loss: 0.2479 - accuracy: 0.0075\n",
            "Epoch 24/100\n",
            "9/9 [==============================] - 4s 415ms/step - loss: 0.2441 - accuracy: 0.0075\n",
            "Epoch 25/100\n",
            "9/9 [==============================] - 4s 416ms/step - loss: 0.2426 - accuracy: 0.0075\n",
            "Epoch 26/100\n",
            "9/9 [==============================] - 4s 415ms/step - loss: 0.2414 - accuracy: 0.0075\n",
            "Epoch 27/100\n",
            "9/9 [==============================] - 4s 417ms/step - loss: 0.2403 - accuracy: 0.0075\n",
            "Epoch 28/100\n",
            "9/9 [==============================] - 4s 417ms/step - loss: 0.2388 - accuracy: 0.0075\n",
            "Epoch 29/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.2368 - accuracy: 0.0075\n",
            "Epoch 30/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.2362 - accuracy: 0.0075\n",
            "Epoch 31/100\n",
            "9/9 [==============================] - 4s 424ms/step - loss: 0.2355 - accuracy: 0.0075\n",
            "Epoch 32/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.2349 - accuracy: 0.0075\n",
            "Epoch 33/100\n",
            "9/9 [==============================] - 4s 426ms/step - loss: 0.2357 - accuracy: 0.0075\n",
            "Epoch 34/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.2325 - accuracy: 0.0075\n",
            "Epoch 35/100\n",
            "9/9 [==============================] - 4s 426ms/step - loss: 0.2336 - accuracy: 0.0075\n",
            "Epoch 36/100\n",
            "9/9 [==============================] - 4s 426ms/step - loss: 0.2266 - accuracy: 0.0075\n",
            "Epoch 37/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.2254 - accuracy: 0.0075\n",
            "Epoch 38/100\n",
            "9/9 [==============================] - 4s 424ms/step - loss: 0.2235 - accuracy: 0.0075\n",
            "Epoch 39/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.2223 - accuracy: 0.0075\n",
            "Epoch 40/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.2191 - accuracy: 0.0075\n",
            "Epoch 41/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.2191 - accuracy: 0.0075\n",
            "Epoch 42/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.2170 - accuracy: 0.0075\n",
            "Epoch 43/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.2176 - accuracy: 0.0075\n",
            "Epoch 44/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.2116 - accuracy: 0.0075\n",
            "Epoch 45/100\n",
            "9/9 [==============================] - 4s 417ms/step - loss: 0.2102 - accuracy: 0.0075\n",
            "Epoch 46/100\n",
            "9/9 [==============================] - 4s 417ms/step - loss: 0.2043 - accuracy: 0.0075\n",
            "Epoch 47/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.2076 - accuracy: 0.0113\n",
            "Epoch 48/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.2068 - accuracy: 0.0075\n",
            "Epoch 49/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.2056 - accuracy: 0.0075\n",
            "Epoch 50/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.2031 - accuracy: 0.0075\n",
            "Epoch 51/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.2005 - accuracy: 0.0150\n",
            "Epoch 52/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1992 - accuracy: 0.0075\n",
            "Epoch 53/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1967 - accuracy: 0.0188\n",
            "Epoch 54/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1929 - accuracy: 0.0075\n",
            "Epoch 55/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1889 - accuracy: 0.0075\n",
            "Epoch 56/100\n",
            "9/9 [==============================] - 4s 424ms/step - loss: 0.1871 - accuracy: 0.0188\n",
            "Epoch 57/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1830 - accuracy: 0.0150\n",
            "Epoch 58/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.1828 - accuracy: 0.0113\n",
            "Epoch 59/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.1779 - accuracy: 0.0226\n",
            "Epoch 60/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1768 - accuracy: 0.0075\n",
            "Epoch 61/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1809 - accuracy: 0.0113\n",
            "Epoch 62/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1711 - accuracy: 0.0113\n",
            "Epoch 63/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.1662 - accuracy: 0.0150\n",
            "Epoch 64/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1656 - accuracy: 0.0150\n",
            "Epoch 65/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1685 - accuracy: 0.0150\n",
            "Epoch 66/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1630 - accuracy: 0.0188\n",
            "Epoch 67/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1608 - accuracy: 0.0226\n",
            "Epoch 68/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.1594 - accuracy: 0.0188\n",
            "Epoch 69/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1623 - accuracy: 0.0188\n",
            "Epoch 70/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1546 - accuracy: 0.0226\n",
            "Epoch 71/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1519 - accuracy: 0.0301\n",
            "Epoch 72/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1514 - accuracy: 0.0150\n",
            "Epoch 73/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.1466 - accuracy: 0.0188\n",
            "Epoch 74/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1485 - accuracy: 0.0188\n",
            "Epoch 75/100\n",
            "9/9 [==============================] - 4s 418ms/step - loss: 0.1433 - accuracy: 0.0263\n",
            "Epoch 76/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1415 - accuracy: 0.0338\n",
            "Epoch 77/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1509 - accuracy: 0.0150\n",
            "Epoch 78/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.1431 - accuracy: 0.0338\n",
            "Epoch 79/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1421 - accuracy: 0.0226\n",
            "Epoch 80/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1496 - accuracy: 0.0451\n",
            "Epoch 81/100\n",
            "9/9 [==============================] - 4s 424ms/step - loss: 0.1367 - accuracy: 0.0226\n",
            "Epoch 82/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1319 - accuracy: 0.0338\n",
            "Epoch 83/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1346 - accuracy: 0.0263\n",
            "Epoch 84/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.1310 - accuracy: 0.0301\n",
            "Epoch 85/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1326 - accuracy: 0.0226\n",
            "Epoch 86/100\n",
            "9/9 [==============================] - 4s 425ms/step - loss: 0.1324 - accuracy: 0.0301\n",
            "Epoch 87/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1322 - accuracy: 0.0150\n",
            "Epoch 88/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1333 - accuracy: 0.0263\n",
            "Epoch 89/100\n",
            "9/9 [==============================] - 4s 423ms/step - loss: 0.1288 - accuracy: 0.0564\n",
            "Epoch 90/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1315 - accuracy: 0.0188\n",
            "Epoch 91/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1290 - accuracy: 0.0414\n",
            "Epoch 92/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1250 - accuracy: 0.0263\n",
            "Epoch 93/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1205 - accuracy: 0.0526\n",
            "Epoch 94/100\n",
            "9/9 [==============================] - 4s 419ms/step - loss: 0.1228 - accuracy: 0.0451\n",
            "Epoch 95/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1275 - accuracy: 0.0301\n",
            "Epoch 96/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1218 - accuracy: 0.0188\n",
            "Epoch 97/100\n",
            "9/9 [==============================] - 4s 422ms/step - loss: 0.1215 - accuracy: 0.0263\n",
            "Epoch 98/100\n",
            "9/9 [==============================] - 4s 421ms/step - loss: 0.1120 - accuracy: 0.0414\n",
            "Epoch 99/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1114 - accuracy: 0.0263\n",
            "Epoch 100/100\n",
            "9/9 [==============================] - 4s 420ms/step - loss: 0.1172 - accuracy: 0.0414\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<keras.callbacks.History at 0x7f6a1613d290>"
            ]
          },
          "metadata": {},
          "execution_count": 13
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pred=model.predict(x)\n",
        "pred=(pred>=0.5).astype(np.int32)\n",
        "pred=pd.DataFrame(pred)\n",
        "pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "DrY98i6Soimg",
        "outputId": "0db822f3-cf46-42a6-bd5c-82784f69b677"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0   1   2   3   4   5   6   7   8   9   ...  43  44  45  46  47  48  49  \\\n",
              "0     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   1   0   \n",
              "1     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "2     0   0   0   1   1   0   0   1   0   0  ...   0   0   0   0   0   0   0   \n",
              "3     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "4     0   0   0   0   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ..  ..  ..  ..  ..  ..  ..   \n",
              "261   0   0   0   0   0   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "262   0   0   0   0   0   1   0   0   0   0  ...   0   0   0   0   0   1   0   \n",
              "263   0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "264   0   0   0   0   0   1   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "265   0   0   0   1   1   0   0   1   0   0  ...   1   0   0   0   0   0   0   \n",
              "\n",
              "     50  51  52  \n",
              "0     0   0   1  \n",
              "1     0   0   1  \n",
              "2     0   0   1  \n",
              "3     0   0   1  \n",
              "4     0   0   1  \n",
              "..   ..  ..  ..  \n",
              "261   0   0   0  \n",
              "262   0   0   1  \n",
              "263   0   0   1  \n",
              "264   0   0   0  \n",
              "265   0   0   1  \n",
              "\n",
              "[266 rows x 53 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f468bc28-163b-4f37-852e-501918c66409\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>43</th>\n",
              "      <th>44</th>\n",
              "      <th>45</th>\n",
              "      <th>46</th>\n",
              "      <th>47</th>\n",
              "      <th>48</th>\n",
              "      <th>49</th>\n",
              "      <th>50</th>\n",
              "      <th>51</th>\n",
              "      <th>52</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266 rows × 53 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f468bc28-163b-4f37-852e-501918c66409')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f468bc28-163b-4f37-852e-501918c66409 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f468bc28-163b-4f37-852e-501918c66409');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 14
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "unique_classes"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WhN6GDZZsGTf",
        "outputId": "17c7c832-035c-4370-ec4a-c265f00ea2f3"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "['Image',\n",
              " 'Alveolar',\n",
              " 'Blood vessels',\n",
              " 'Chromophobe-like',\n",
              " 'Clear cells',\n",
              " 'Compact small nests',\n",
              " 'Cystic',\n",
              " 'Eosinophlic',\n",
              " 'Fibrosis',\n",
              " 'Friable',\n",
              " 'HLRCC like',\n",
              " 'ISUP 1',\n",
              " 'ISUP 2',\n",
              " 'ISUP 3',\n",
              " 'ISUP 4',\n",
              " 'Immune infiltration',\n",
              " 'Infiltrative',\n",
              " 'Insular',\n",
              " 'Large nests',\n",
              " 'Lymphovascular Invasion',\n",
              " 'Necrosis',\n",
              " 'Non-Tumour cell',\n",
              " 'Non-tumour tissue',\n",
              " 'Normal kidney',\n",
              " 'Normal tissue',\n",
              " 'Papillary',\n",
              " 'PathAnnotationObject',\n",
              " 'Regressive',\n",
              " 'Rhabdoid',\n",
              " 'Sarcomatoid',\n",
              " 'Solid sheets',\n",
              " 'Syncytial giant cell',\n",
              " 'TILS high',\n",
              " 'TILS low',\n",
              " 'TILS moderate',\n",
              " 'Tertiary Lymphoid Structure',\n",
              " 'Tissue_area',\n",
              " 'Translocation-like',\n",
              " 'Tubular',\n",
              " 'Tumour cell',\n",
              " 'Unassigned_architecture',\n",
              " 'artefact',\n",
              " 'compact small nests',\n",
              " 'grade_unassigned',\n",
              " 'granular cytoplasm',\n",
              " 'haemorrhage',\n",
              " 'no_tissue',\n",
              " 'normal_immune',\n",
              " 'peri-tumoural_immune',\n",
              " 'sclerotic nested pattern',\n",
              " 'spindled',\n",
              " 'tertiary lymphoid structure',\n",
              " 'tissue_area',\n",
              " 'tumour_immune']"
            ]
          },
          "metadata": {},
          "execution_count": 15
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import sklearn.metrics as skm\n",
        "import seaborn as sns\n",
        "\n",
        "cm = skm.multilabel_confusion_matrix(y, pred)\n",
        "\n"
      ],
      "metadata": {
        "id": "y55s_dUvFSt_"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def draw_confusion_matrix(class_id,name):\n",
        "\n",
        "  ax = sns.heatmap(cm[class_id], annot=True, cmap='Blues',fmt = 'g')\n",
        "\n",
        "  ax.set_title('Seaborn Confusion Matrix  for '+str(name)+\"\\n\");\n",
        "  ax.set_xlabel('\\nPredicted Values')\n",
        "  ax.set_ylabel('Actual Values ');\n",
        "\n",
        "## Ticket labels - List must be in alphabetical order\n",
        "  ax.xaxis.set_ticklabels(['False','True'])\n",
        "  ax.yaxis.set_ticklabels(['False','True'])\n",
        "\n",
        "## Display the visualization of the Confusion Matrix.\n",
        "  plt.show()"
      ],
      "metadata": {
        "id": "ENmfQ3SIeSrI"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(3,\"Clear Cell\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "eCan4NI4Dzv-",
        "outputId": "e1e3dfef-8274-4cf7-f732-613aed616824"
      },
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "pred"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "irFVqp56IBOF",
        "outputId": "fbfa5158-a7c4-44a8-f23e-1191cd52e658"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "     0   1   2   3   4   5   6   7   8   9   ...  43  44  45  46  47  48  49  \\\n",
              "0     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   1   0   \n",
              "1     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "2     0   0   0   1   1   0   0   1   0   0  ...   0   0   0   0   0   0   0   \n",
              "3     0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "4     0   0   0   0   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "..   ..  ..  ..  ..  ..  ..  ..  ..  ..  ..  ...  ..  ..  ..  ..  ..  ..  ..   \n",
              "261   0   0   0   0   0   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "262   0   0   0   0   0   1   0   0   0   0  ...   0   0   0   0   0   1   0   \n",
              "263   0   0   0   1   1   0   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "264   0   0   0   0   0   1   0   0   0   0  ...   0   0   0   0   0   0   0   \n",
              "265   0   0   0   1   1   0   0   1   0   0  ...   1   0   0   0   0   0   0   \n",
              "\n",
              "     50  51  52  \n",
              "0     0   0   1  \n",
              "1     0   0   1  \n",
              "2     0   0   1  \n",
              "3     0   0   1  \n",
              "4     0   0   1  \n",
              "..   ..  ..  ..  \n",
              "261   0   0   0  \n",
              "262   0   0   1  \n",
              "263   0   0   1  \n",
              "264   0   0   0  \n",
              "265   0   0   1  \n",
              "\n",
              "[266 rows x 53 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7ca52df3-7092-4958-8e7e-56820db1738d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "      <th>3</th>\n",
              "      <th>4</th>\n",
              "      <th>5</th>\n",
              "      <th>6</th>\n",
              "      <th>7</th>\n",
              "      <th>8</th>\n",
              "      <th>9</th>\n",
              "      <th>...</th>\n",
              "      <th>43</th>\n",
              "      <th>44</th>\n",
              "      <th>45</th>\n",
              "      <th>46</th>\n",
              "      <th>47</th>\n",
              "      <th>48</th>\n",
              "      <th>49</th>\n",
              "      <th>50</th>\n",
              "      <th>51</th>\n",
              "      <th>52</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>261</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>262</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>263</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>264</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>265</th>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>266 rows × 53 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7ca52df3-7092-4958-8e7e-56820db1738d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-7ca52df3-7092-4958-8e7e-56820db1738d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-7ca52df3-7092-4958-8e7e-56820db1738d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from sklearn.metrics import classification_report\n",
        "pred=model.predict(x)\n",
        "pred=(pred>=0.5).astype(np.int32)\n",
        "\n",
        "y_data=y[:,3]\n",
        "pred_data=pred[:,3]\n",
        "print(classification_report(y_data, pred_data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2SQI9KyKHda2",
        "outputId": "11d750ec-3203-408e-f518-6b45038d8814"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.82      0.82      0.82       130\n",
            "         1.0       0.82      0.83      0.83       136\n",
            "\n",
            "    accuracy                           0.82       266\n",
            "   macro avg       0.82      0.82      0.82       266\n",
            "weighted avg       0.82      0.82      0.82       266\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install plot-metric"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "1nPhA-z_KpQK",
        "outputId": "4ee39323-8f81-4e12-9808-7b935dea494e"
      },
      "execution_count": 59,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n",
            "Collecting plot-metric\n",
            "  Downloading plot_metric-0.0.6-py3-none-any.whl (13 kB)\n",
            "Requirement already satisfied: matplotlib>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (3.2.2)\n",
            "Requirement already satisfied: pandas>=0.23.4 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (1.3.5)\n",
            "Requirement already satisfied: seaborn>=0.9.0 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (0.11.2)\n",
            "Requirement already satisfied: scikit-learn>=0.21.2 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (1.0.2)\n",
            "Requirement already satisfied: numpy>=1.15.4 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (1.21.6)\n",
            "Requirement already satisfied: scipy>=1.1.0 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (1.7.3)\n",
            "Requirement already satisfied: colorlover>=0.3.0 in /usr/local/lib/python3.7/dist-packages (from plot-metric) (0.3.0)\n",
            "Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.0.2->plot-metric) (1.4.4)\n",
            "Requirement already satisfied: pyparsing!=2.0.4,!=2.1.2,!=2.1.6,>=2.0.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.0.2->plot-metric) (3.0.9)\n",
            "Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.0.2->plot-metric) (0.11.0)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from matplotlib>=3.0.2->plot-metric) (2.8.2)\n",
            "Requirement already satisfied: typing-extensions in /usr/local/lib/python3.7/dist-packages (from kiwisolver>=1.0.1->matplotlib>=3.0.2->plot-metric) (4.1.1)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=0.23.4->plot-metric) (2022.2.1)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->matplotlib>=3.0.2->plot-metric) (1.15.0)\n",
            "Requirement already satisfied: threadpoolctl>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.2->plot-metric) (3.1.0)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.7/dist-packages (from scikit-learn>=0.21.2->plot-metric) (1.1.0)\n",
            "Installing collected packages: plot-metric\n",
            "Successfully installed plot-metric-0.0.6\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from plot_metric.functions import BinaryClassification\n",
        "# Visualisation with plot_metric\n",
        "bc = BinaryClassification(y_data, pred_data, labels=[\"Class 1\", \"Class 2\"])\n",
        "\n",
        "# Figures\n",
        "plt.figure(figsize=(5,5))\n",
        "bc.plot_roc_curve()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "e1Lqw9SFJQDH",
        "outputId": "3c6a22c1-e8ee-4f0c-d92c-eaa69c2209fc"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(6,\"Eosinophillic\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "VRLdCJJNFBRA",
        "outputId": "ba882caa-0889-4bec-f9da-7129084824fb"
      },
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "y_data=y[:,6]\n",
        "pred_data=pred[:,6]\n",
        "print(classification_report(y_data, pred_data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "byAYTLJQIjPv",
        "outputId": "d670ffda-68e5-4750-9cf1-64f197876e54"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       0.99      1.00      0.99       244\n",
            "         1.0       0.95      0.86      0.90        22\n",
            "\n",
            "    accuracy                           0.98       266\n",
            "   macro avg       0.97      0.93      0.95       266\n",
            "weighted avg       0.98      0.98      0.98       266\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from plot_metric.functions import BinaryClassification\n",
        "# Visualisation with plot_metric\n",
        "bc = BinaryClassification(y_data, pred_data, labels=[\"Class 1\", \"Class 2\"])\n",
        "\n",
        "# Figures\n",
        "plt.figure(figsize=(5,5))\n",
        "bc.plot_roc_curve()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "yROKtHjKLRgB",
        "outputId": "ac26067d-52fb-40b5-952a-ddf113948fb5"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(17,\"Large Nests\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "_jhh7YUfFEux",
        "outputId": "8abaf599-1bb4-4b4c-89f0-e6ac46902ffe"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "y_data=y[:,27]\n",
        "pred_data=pred[:,27]\n",
        "print(classification_report(y_data, pred_data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "uJrIGUdSIoL4",
        "outputId": "4ea9b1ca-8634-4cc6-ac12-0e36bd3dbbcc"
      },
      "execution_count": 66,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00       260\n",
            "         1.0       1.00      1.00      1.00         6\n",
            "\n",
            "    accuracy                           1.00       266\n",
            "   macro avg       1.00      1.00      1.00       266\n",
            "weighted avg       1.00      1.00      1.00       266\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from plot_metric.functions import BinaryClassification\n",
        "# Visualisation with plot_metric\n",
        "bc = BinaryClassification(y_data, pred_data, labels=[\"Class 1\", \"Class 2\"])\n",
        "\n",
        "# Figures\n",
        "plt.figure(figsize=(5,5))\n",
        "bc.plot_roc_curve()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "GCjb42cQLXN-",
        "outputId": "11804af6-72f7-47b0-c6d5-bd1425e4a2d4"
      },
      "execution_count": 67,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(27,\"Rhabdoid\")"
      ],
      "metadata": {
        "id": "1MQ_L-DqFJrw",
        "outputId": "3c187ac0-509f-4731-ec7d-0d178eafa10c",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        }
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "y_data=y[:,28]\n",
        "pred_data=pred[:,28]\n",
        "print(classification_report(y_data, pred_data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "c5ZbBucNIwN6",
        "outputId": "4b76ddea-1f33-4469-9969-1f59f6240eb0"
      },
      "execution_count": 68,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00       265\n",
            "         1.0       1.00      1.00      1.00         1\n",
            "\n",
            "    accuracy                           1.00       266\n",
            "   macro avg       1.00      1.00      1.00       266\n",
            "weighted avg       1.00      1.00      1.00       266\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from plot_metric.functions import BinaryClassification\n",
        "# Visualisation with plot_metric\n",
        "bc = BinaryClassification(y_data, pred_data, labels=[\"Class 1\", \"Class 2\"])\n",
        "\n",
        "# Figures\n",
        "plt.figure(figsize=(5,5))\n",
        "bc.plot_roc_curve()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "6Hb-v76lLZLy",
        "outputId": "ce27d391-0ca1-4cd2-e48e-4710e11f112b"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(28,\"Sarcomatoid\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "TG5HteaHGNNn",
        "outputId": "f888e947-264c-447c-9368-608f89bed524"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "\n",
        "y_data=y[:,42]\n",
        "pred_data=pred[:,42]\n",
        "print(classification_report(y_data, pred_data))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "L9zRRzvGI5HH",
        "outputId": "4086c22c-5052-4c02-d4bf-5f368462912b"
      },
      "execution_count": 70,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "              precision    recall  f1-score   support\n",
            "\n",
            "         0.0       1.00      1.00      1.00       265\n",
            "         1.0       1.00      1.00      1.00         1\n",
            "\n",
            "    accuracy                           1.00       266\n",
            "   macro avg       1.00      1.00      1.00       266\n",
            "weighted avg       1.00      1.00      1.00       266\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from plot_metric.functions import BinaryClassification\n",
        "# Visualisation with plot_metric\n",
        "bc = BinaryClassification(y_data, pred_data, labels=[\"Class 1\", \"Class 2\"])\n",
        "\n",
        "# Figures\n",
        "plt.figure(figsize=(5,5))\n",
        "bc.plot_roc_curve()\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 350
        },
        "id": "gfRHrzY7Lban",
        "outputId": "2c79f29f-cad9-4fc9-f733-19b3eb5860dd"
      },
      "execution_count": 71,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 360x360 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "draw_confusion_matrix(42,\"Compact small nests\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 322
        },
        "id": "dMFQwiBfGjsG",
        "outputId": "67e5b450-8680-412d-a49d-5ce8003ffd84"
      },
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 2 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}